[gd_scene load_steps=12 format=3 uid="uid://j32perqlaaws"]

[ext_resource type="Texture2D" uid="uid://betlutrc7j35" path="res://art/frog/down_idle.png" id="1_x8n60"]
[ext_resource type="Texture2D" uid="uid://t7itu4cl8xb7" path="res://art/frog/down_jump.png" id="2_twgww"]
[ext_resource type="Texture2D" uid="uid://ck2jlxlyvf25h" path="res://art/frog/left_idle.png" id="3_cldvy"]
[ext_resource type="Texture2D" uid="uid://by1an0p5wl3i8" path="res://art/frog/left_jump.png" id="4_7t26l"]
[ext_resource type="Texture2D" uid="uid://dqwgox5x0dw6w" path="res://art/frog/right_idle.png" id="5_m8h56"]
[ext_resource type="Texture2D" uid="uid://bjurlqkl0hspl" path="res://art/frog/right_jump.png" id="6_s68nk"]
[ext_resource type="Texture2D" uid="uid://ch58p3kna3n8q" path="res://art/frog/up_idle.png" id="7_mx67y"]
[ext_resource type="Texture2D" uid="uid://cajeajmoq5qu8" path="res://art/frog/up_jump.png" id="8_sn8f7"]

[sub_resource type="GDScript" id="GDScript_10l7q"]
script/source = "class_name Frog
extends CharacterBody2D


const SPEED = 6000.0
const TARGET_POSITION_THRESHOLD = Vector2(1.0, 1.0)
const STARTING_POSITION = Vector2(400.0, 464.0)

var previous_position : Vector2
var target_position : Vector2
var floatable_velocity : Vector2
var sprites : AnimatedSprite2D

var on_floating_thing : bool
var on_water : bool
var is_on_lillypad : bool

func _ready():
	position = STARTING_POSITION
	sprites = $AnimatedSprite2D
	target_position = position
	set_sprite_to_sitting_animation()
	on_floating_thing = false
	on_water = false
	is_on_lillypad = false

func _physics_process(delta):
	
#	print(self, \" \", sprites.is_playing(), \" \", is_on_lillypad)
	if !is_on_lillypad:
		# only one movement at a time!
		if !sprites.is_playing():
			previous_position = position
			if Input.is_action_just_pressed(\"left\"):
				target_position.x -= 32
				sprites.play(\"left_jump\")
			if Input.is_action_just_pressed(\"right\"):
				target_position.x += 32
				sprites.play(\"right_jump\")
			if Input.is_action_just_pressed(\"up\"):
				target_position.y -= 32
				sprites.play(\"up_jump\")
			if Input.is_action_just_pressed(\"down\"):
				target_position.y += 32
				sprites.play(\"down_jump\")
		
	if (target_position.x < 0.0 || target_position.y < 0.0 || target_position.x > 854 || target_position.y > 480):
		death()
	
#	print(floatable_velocity)
	velocity = (round(target_position - position).normalized() * SPEED + floatable_velocity) * delta
	target_position += floatable_velocity * delta
	if (abs(target_position - position).x <= TARGET_POSITION_THRESHOLD.x && abs(target_position - position).y <= TARGET_POSITION_THRESHOLD.y):
		position = target_position
	
	for index in get_slide_collision_count():
		var collision = get_slide_collision(index)
#		print(collision.get_collider_id(), \" \", collision.get_collider().name)
		var collision_direction = collision.get_position() - position
		var target_direction = target_position - position
		
		collision_direction.x /= collision_direction.x
		collision_direction.y /= collision_direction.y
		target_direction.x /= target_direction.x
		target_direction.y /= target_direction.y
		
		# on collision reset the last movement - cannot move through static obstacles!
#		print(target_direction, \" \", collision_direction)
		if target_direction == collision_direction || target_direction.x == collision_direction.x || target_direction.y == collision_direction.y:
			position = previous_position
			target_position = previous_position
			set_sprite_to_sitting_animation()
	
	if (on_water && !on_floating_thing):
		death()
	
	move_and_slide()

func death():
	reset()

func reset():
	position = STARTING_POSITION
	target_position = position
	previous_position = position
	sprites.play(\"up_jump\")
	set_sprite_to_sitting_animation()
	floatable_velocity = Vector2.ZERO

func set_on_lillypad(value, new_position):
	is_on_lillypad = value
	position = new_position
	target_position = new_position
	previous_position = new_position
	floatable_velocity = Vector2.ZERO

func set_floatable_velocity(additional_velocity):
	floatable_velocity = additional_velocity

func set_sprite_to_sitting_animation():
	sprites.set_frame_and_progress(1, 0.0)
	sprites.play()

func _on_area_2d_water_body_entered(body):
	on_water = true

func _on_area_2d_water_body_exited(body):
	on_water = false

func set_on_floatable(is_on_floatable):
	on_floating_thing = is_on_floatable
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_wbsch"]
size = Vector2(30, 30)

[sub_resource type="SpriteFrames" id="SpriteFrames_n5g8e"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_x8n60")
}],
"loop": true,
"name": &"down_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_twgww")
}, {
"duration": 1.0,
"texture": ExtResource("1_x8n60")
}],
"loop": false,
"name": &"down_jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("3_cldvy")
}],
"loop": true,
"name": &"left_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("4_7t26l")
}, {
"duration": 1.0,
"texture": ExtResource("3_cldvy")
}],
"loop": false,
"name": &"left_jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_m8h56")
}],
"loop": true,
"name": &"right_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("6_s68nk")
}, {
"duration": 1.0,
"texture": ExtResource("5_m8h56")
}],
"loop": false,
"name": &"right_jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("7_mx67y")
}],
"loop": true,
"name": &"up_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("8_sn8f7")
}, {
"duration": 1.0,
"texture": ExtResource("7_mx67y")
}],
"loop": false,
"name": &"up_jump",
"speed": 5.0
}]

[node name="Frog" type="CharacterBody2D"]
script = SubResource("GDScript_10l7q")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_wbsch")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
sprite_frames = SubResource("SpriteFrames_n5g8e")
animation = &"up_jump"
