[gd_scene load_steps=16 format=3 uid="uid://j32perqlaaws"]

[ext_resource type="Texture2D" uid="uid://betlutrc7j35" path="res://art/frog/down_idle.png" id="1_x8n60"]
[ext_resource type="Texture2D" uid="uid://t7itu4cl8xb7" path="res://art/frog/down_jump.png" id="2_twgww"]
[ext_resource type="Texture2D" uid="uid://ck2jlxlyvf25h" path="res://art/frog/left_idle.png" id="3_cldvy"]
[ext_resource type="Texture2D" uid="uid://by1an0p5wl3i8" path="res://art/frog/left_jump.png" id="4_7t26l"]
[ext_resource type="Texture2D" uid="uid://dqwgox5x0dw6w" path="res://art/frog/right_idle.png" id="5_m8h56"]
[ext_resource type="Texture2D" uid="uid://bjurlqkl0hspl" path="res://art/frog/right_jump.png" id="6_s68nk"]
[ext_resource type="Texture2D" uid="uid://ch58p3kna3n8q" path="res://art/frog/up_idle.png" id="7_mx67y"]
[ext_resource type="Texture2D" uid="uid://cajeajmoq5qu8" path="res://art/frog/up_jump.png" id="8_sn8f7"]
[ext_resource type="AudioStream" uid="uid://biuodgktgd8wl" path="res://art/sounds/Ribbit.ogg" id="9_vge6c"]
[ext_resource type="AudioStream" uid="uid://dt354vf7nyjrk" path="res://art/sounds/death.wav" id="10_a6486"]

[sub_resource type="GDScript" id="GDScript_10l7q"]
script/source = "class_name Frog
extends CharacterBody2D


const SPEED = 6000.0
const TARGET_POSITION_THRESHOLD = Vector2(1.0, 1.0)
const STARTING_POSITION = Vector2(400.0, 464.0)

var previous_position : Vector2
var target_position : Vector2
var floatable_velocity : Vector2
var sprites : AnimatedSprite2D

var on_floating_thing : bool
var on_water : bool
var is_on_lillypad : bool
var is_about_to_die : bool

enum deathReason {WATER, EATEN, RUNOVER}
#@export var DEATHREASON : deathReason

var deaths = 0

var swipe_start = null
var minimum_drag = 100

var current_input_mobile = null
enum movementMobile {UP, DOWN, LEFT, RIGHT}

func _ready():
	position = STARTING_POSITION
	sprites = $AnimatedSprite2D
	target_position = position
	set_sprite_to_sitting_animation()
	on_floating_thing = false
	on_water = false
	is_on_lillypad = false
	is_about_to_die = false
	$Timer.stop()
	$TimerImmunity.stop()

func _unhandled_input(event):
	if event.is_action_pressed(\"click\"):
		swipe_start = event.position
	if event.is_action_released(\"click\"):
		_calculate_swipe(event.position)

func _calculate_swipe(swipe_end):
	if swipe_start == null: 
		return
	var swipe = swipe_end - swipe_start
#	print(swipe)
	if abs(swipe.x) > minimum_drag:
		if swipe.x > 0:
#			print(\"swipe right\")
			current_input_mobile = movementMobile.RIGHT
		else:
#			print(\"swipe left\")
			current_input_mobile = movementMobile.LEFT
	if abs(swipe.y) > minimum_drag:
		if swipe.y > 0:
#			print(\"swip down\")
			current_input_mobile = movementMobile.DOWN
		else:
#			print(\"swip up\")
			current_input_mobile = movementMobile.UP

func _physics_process(delta):
	
#	print(self, \" \", sprites.is_playing(), \" \", is_on_lillypad)
	if !is_on_lillypad:
		# only one movement at a time!
		if !sprites.is_playing():
			previous_position = position
			if Input.is_action_just_pressed(\"left\") || current_input_mobile == movementMobile.LEFT:
				target_position.x -= 32
				sprites.play(\"left_jump\")
				$AudioStreamPlayerJump.stop()
				$AudioStreamPlayerJump.play()
				current_input_mobile = null
			if Input.is_action_just_pressed(\"right\") || current_input_mobile == movementMobile.RIGHT:
				target_position.x += 32
				sprites.play(\"right_jump\")
				$AudioStreamPlayerJump.stop()
				$AudioStreamPlayerJump.play()
				current_input_mobile = null
			if Input.is_action_just_pressed(\"up\") || current_input_mobile == movementMobile.UP:
				target_position.y -= 32
				sprites.play(\"up_jump\")
				$AudioStreamPlayerJump.stop()
				$AudioStreamPlayerJump.play()
				current_input_mobile = null
			if Input.is_action_just_pressed(\"down\") || current_input_mobile == movementMobile.DOWN:
				target_position.y += 32
				sprites.play(\"down_jump\")
				$AudioStreamPlayerJump.stop()
				$AudioStreamPlayerJump.play()
				current_input_mobile = null
		
	if (target_position.x < 0.0 || target_position.y < 0.0 || target_position.x > 854 || target_position.y > 480):
		death(deathReason.EATEN)
	
#	print(floatable_velocity)
	velocity = (round(target_position - position).normalized() * SPEED + floatable_velocity) * delta
	target_position += floatable_velocity * delta
	if (abs(target_position - position).x <= TARGET_POSITION_THRESHOLD.x && abs(target_position - position).y <= TARGET_POSITION_THRESHOLD.y):
		position = target_position
	
	for index in get_slide_collision_count():
		var collision = get_slide_collision(index)
#		print(collision.get_collider_id(), \" \", collision.get_collider().name)
		var collision_direction = collision.get_position() - position
		var target_direction = target_position - position
		
		collision_direction.x /= collision_direction.x
		collision_direction.y /= collision_direction.y
		target_direction.x /= target_direction.x
		target_direction.y /= target_direction.y
		
		# on collision reset the last movement - cannot move through static obstacles!
#		print(target_direction, \" \", collision_direction)
		if target_direction == collision_direction || target_direction.x == collision_direction.x || target_direction.y == collision_direction.y:
			position = previous_position
			target_position = previous_position
			set_sprite_to_sitting_animation()
	
	if (on_water && !on_floating_thing):
		death(deathReason.WATER)
	
	if $Timer.time_left == 0.0 && is_about_to_die:
		reset()
	
	if !is_about_to_die:
		move_and_slide()
	else:
		$AnimatedSprite2D.hide()

func death(death_reason):
	if !is_about_to_die && $TimerImmunity.time_left == 0.0:
		self.get_parent().lose_a_life()
		$AudioStreamPlayerDeath.stop()
		$AudioStreamPlayerDeath.play()
		deaths = deaths + 1
#		print(\"deaths: \" + str(deaths))
		if (death_reason == deathReason.WATER):
			$GPUParticles2D.restart()
		else:
			$GPUParticles2D_Blood.restart()
		$Timer.start()
		is_about_to_die = true

func reset():
	position = STARTING_POSITION
	target_position = position
	previous_position = position
	sprites.play(\"up_jump\")
	set_sprite_to_sitting_animation()
	floatable_velocity = Vector2.ZERO
	is_about_to_die = false
	$AnimatedSprite2D.show()
	$TimerImmunity.start()

func set_on_lillypad(value, new_position):
	is_on_lillypad = value
	position = new_position
	target_position = new_position
	previous_position = new_position
	floatable_velocity = Vector2.ZERO

func set_floatable_velocity(additional_velocity):
	floatable_velocity = additional_velocity

func set_sprite_to_sitting_animation():
	sprites.set_frame_and_progress(1, 0.0)
	sprites.play()

func _on_area_2d_water_body_entered(body):
	on_water = true

func _on_area_2d_water_body_exited(body):
	on_water = false

func set_on_floatable(is_on_floatable):
	on_floating_thing = is_on_floatable
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_wbsch"]
size = Vector2(30, 30)

[sub_resource type="SpriteFrames" id="SpriteFrames_n5g8e"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_x8n60")
}],
"loop": true,
"name": &"down_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_twgww")
}, {
"duration": 1.0,
"texture": ExtResource("1_x8n60")
}],
"loop": false,
"name": &"down_jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("3_cldvy")
}],
"loop": true,
"name": &"left_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("4_7t26l")
}, {
"duration": 1.0,
"texture": ExtResource("3_cldvy")
}],
"loop": false,
"name": &"left_jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_m8h56")
}],
"loop": true,
"name": &"right_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("6_s68nk")
}, {
"duration": 1.0,
"texture": ExtResource("5_m8h56")
}],
"loop": false,
"name": &"right_jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("7_mx67y")
}],
"loop": true,
"name": &"up_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("8_sn8f7")
}, {
"duration": 1.0,
"texture": ExtResource("7_mx67y")
}],
"loop": false,
"name": &"up_jump",
"speed": 5.0
}]

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_j7xph"]
emission_shape = 6
emission_ring_axis = Vector3(0, 0, 1)
emission_ring_height = 16.0
emission_ring_radius = 16.0
emission_ring_inner_radius = 10.0
particle_flag_disable_z = true
spread = 180.0
gravity = Vector3(0, 0, 0)
initial_velocity_min = 1.0
initial_velocity_max = 25.0
orbit_velocity_min = 0.0
orbit_velocity_max = 0.0

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_ttd12"]
lifetime_randomness = 0.52
emission_shape = 6
emission_ring_axis = Vector3(0, 0, 1)
emission_ring_height = 32.0
emission_ring_radius = 16.0
emission_ring_inner_radius = 15.0
particle_flag_disable_z = true
direction = Vector3(1, 1, 1)
spread = 180.0
gravity = Vector3(0, 0, 0)
initial_velocity_min = 1.0
initial_velocity_max = 25.0
orbit_velocity_min = 0.0
orbit_velocity_max = 0.0
color = Color(0.694118, 0.243137, 0.32549, 1)

[node name="Frog" type="CharacterBody2D"]
script = SubResource("GDScript_10l7q")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_wbsch")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
sprite_frames = SubResource("SpriteFrames_n5g8e")
animation = &"up_jump"

[node name="GPUParticles2D" type="GPUParticles2D" parent="."]
emitting = false
amount = 38
process_material = SubResource("ParticleProcessMaterial_j7xph")
lifetime = 0.5
one_shot = true

[node name="GPUParticles2D_Blood" type="GPUParticles2D" parent="."]
emitting = false
amount = 38
process_material = SubResource("ParticleProcessMaterial_ttd12")
lifetime = 0.5
one_shot = true

[node name="Timer" type="Timer" parent="."]
one_shot = true

[node name="TimerImmunity" type="Timer" parent="."]
wait_time = 0.5
one_shot = true

[node name="AudioStreamPlayerJump" type="AudioStreamPlayer" parent="."]
stream = ExtResource("9_vge6c")

[node name="AudioStreamPlayerDeath" type="AudioStreamPlayer" parent="."]
stream = ExtResource("10_a6486")
